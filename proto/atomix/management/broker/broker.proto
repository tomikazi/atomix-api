// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package atomix.management.broker;

import "atomix/primitive/primitive.proto";
import "gogoproto/gogo.proto";

message PrimitiveId {
    atomix.primitive.PrimitiveId id = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];
}

message PrimitiveAddress {
    string host = 1;
    int32 port = 2;
}

message RegisterPrimitiveRequest {
    PrimitiveId primitive_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "PrimitiveID"];
    PrimitiveAddress address = 2 [(gogoproto.nullable) = false];
}

message RegisterPrimitiveResponse {

}

message UnregisterPrimitiveRequest {
    PrimitiveId primitive_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "PrimitiveID"];
}

message UnregisterPrimitiveResponse {

}

message LookupPrimitiveRequest {
    PrimitiveId primitive_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "PrimitiveID"];
}

message LookupPrimitiveResponse {
    PrimitiveAddress address = 1 [(gogoproto.nullable) = false];
}

service Broker {
    rpc RegisterPrimitive (RegisterPrimitiveRequest) returns (RegisterPrimitiveResponse);
    rpc UnregisterPrimitive (UnregisterPrimitiveRequest) returns (UnregisterPrimitiveResponse);
    rpc LookupPrimitive (LookupPrimitiveRequest) returns (LookupPrimitiveResponse);
}
