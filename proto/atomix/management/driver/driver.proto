// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package atomix.management.driver;

import "atomix/protocol/protocol.proto";
import "gogoproto/gogo.proto";

message AgentId {
    string namespace = 1;
    string name = 2;
}

message AgentAddress {
    string host = 1;
    int32 port = 2;
}

message AgentConfig {
    atomix.protocol.ProtocolConfig protocol = 1 [(gogoproto.nullable) = false];
}

message StartAgentRequest {
    AgentId agent_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "AgentID"];
    AgentAddress address = 2 [(gogoproto.nullable) = false];
    AgentConfig config = 3 [(gogoproto.nullable) = false];
}

message StartAgentResponse {

}

message ConfigureAgentRequest {
    AgentId agent_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "AgentID"];
    AgentConfig config = 2 [(gogoproto.nullable) = false];
}

message ConfigureAgentResponse {

}

message StopAgentRequest {
    AgentId agent_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "AgentID"];
}

message StopAgentResponse {

}

service Driver {
    rpc StartAgent (StartAgentRequest) returns (StartAgentResponse);
    rpc ConfigureAgent (ConfigureAgentRequest) returns (ConfigureAgentResponse);
    rpc StopAgent (StopAgentRequest) returns (StopAgentResponse);
}
