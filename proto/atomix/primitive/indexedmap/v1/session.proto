/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

import "atomix/primitive/primitive.proto";
import "atomix/primitive/service.proto";
import "atomix/primitive/session.proto";
import "gogoproto/gogo.proto";

package atomix.primitive.indexedmap.v1;

message OpenSessionRequest {
    IndexedMapSessionOptions options = 1 [(gogoproto.nullable) = false];
}

message OpenSessionResponse {
    string session_id = 1 [(gogoproto.customname) = "SessionID"];
}

message IndexedMapSessionOptions {
    IndexedMapCacheOptions cache = 1 [(gogoproto.nullable) = false];
}

message IndexedMapCacheOptions {
    bool enabled = 1;
    IndexedMapCacheStrategy strategy = 2;
}

enum IndexedMapCacheStrategy {
    NEAR = 0;
    READ_THROUGH = 1;
    WRITE_THROUGH = 2;
    READ_THROUGH_WRITE_THROUGH = 3;
}

message CloseSessionRequest {
    string session_id = 1 [(gogoproto.customname) = "SessionID"];
}

message CloseSessionResponse {

}

// IndexedMapSession is a service for managing indexed map sessions
service IndexedMapSession {
    option (atomix.primitive.type) = "IndexedMap";
    option (atomix.primitive.service.type) = SESSION;

    rpc OpenSession (OpenSessionRequest) returns (OpenSessionResponse) {
        option (atomix.primitive.session.operation) = OPEN;
    }

    rpc CloseSession (CloseSessionRequest) returns (CloseSessionResponse) {
        option (atomix.primitive.session.operation) = CLOSE;
    }
}
