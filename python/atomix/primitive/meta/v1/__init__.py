# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: atomix/primitive/meta/v1/timestamp.proto, atomix/primitive/meta/v1/object.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import datetime
from typing import List

import betterproto


class ObjectMetaType(betterproto.Enum):
    OBJECT = 0
    TOMBSTONE = 1


@dataclass(eq=False, repr=False)
class Timestamp(betterproto.Message):
    physical_timestamp: "PhysicalTimestamp" = betterproto.message_field(
        1, group="timestamp"
    )
    logical_timestamp: "LogicalTimestamp" = betterproto.message_field(
        2, group="timestamp"
    )
    vector_timestamp: "VectorTimestamp" = betterproto.message_field(
        3, group="timestamp"
    )
    epoch_timestamp: "EpochTimestamp" = betterproto.message_field(4, group="timestamp")
    composite_timestamp: "CompositeTimestamp" = betterproto.message_field(
        5, group="timestamp"
    )

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class LogicalTimestamp(betterproto.Message):
    time: int = betterproto.uint64_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class VectorTimestamp(betterproto.Message):
    time: List[int] = betterproto.uint64_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class PhysicalTimestamp(betterproto.Message):
    time: datetime = betterproto.message_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class Epoch(betterproto.Message):
    num: int = betterproto.uint64_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class EpochTimestamp(betterproto.Message):
    epoch: "Epoch" = betterproto.message_field(1)
    sequence: "Sequence" = betterproto.message_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class Sequence(betterproto.Message):
    num: int = betterproto.uint64_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class CompositeTimestamp(betterproto.Message):
    timestamps: List["Timestamp"] = betterproto.message_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ObjectMeta(betterproto.Message):
    revision: "Revision" = betterproto.message_field(1)
    timestamp: "Timestamp" = betterproto.message_field(2)
    type: "ObjectMetaType" = betterproto.enum_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class Revision(betterproto.Message):
    num: int = betterproto.uint64_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()
